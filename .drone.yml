pipeline:
  # build:
  #   image: registry.haktec.de/jekyll:86e0546618060dc5c7d00ff66ce218022768d4a0
  #   environment:
  #     TARGET: production
  #   commands:
  #     - make build
  #   when:
  #     branch:
  #       include: "*"
  #       exclude: staging

  build_staging:
    image: registry.hkoerber.de/hugo:04d0d7f0967508c9efe5678f96b90dc21a7d958b
    commands:
      - /app/bin/hugo
        --baseURL https://staging.blog.hkoerber.de/
        --buildDrafts
        --buildFuture
        --ignoreCache
    when:
      branch:
        include: "*"
        exclude: master

  build_production:
    image: registry.hkoerber.de/hugo:04d0d7f0967508c9efe5678f96b90dc21a7d958b
    commands:
      - /app/bin/hugo
        --baseURL https://blog.hkoerber.de/
        --minify
        --ignoreCache
    when:
      branch:
        - master

  package:
    image: registry.hkoerber.de/docker:636402f9f2ddd0e29f31fd1369ad69a38cb72fef
    environment:
      TARGET: production
    commands:
      - make image
      - make push
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  deploy:
    image: quay.io/honestbee/drone-kubernetes:master
    deployment: de-haktec-blog-staging
    kubernetes_server: ${KUBERNETES_SERVER}
    # kubernetes_cert: ${KUBERNETES_CERT}
    kubernetes_token: ${KUBERNETES_TOKEN}
    repo: registry.hkoerber.de/blog
    container: blog
    tag: ${DRONE_COMMIT_SHA}
    namespace: default
    when:
      branch:
        - staging
    secrets:
      - KUBERNETES_SERVER
      # - KUBERNETES_CERT
      - KUBERNETES_TOKEN

  deploy:
    image: quay.io/honestbee/drone-kubernetes:master
    deployment: de-haktec-blog
    kubernetes_server: ${KUBERNETES_SERVER}
    # kubernetes_cert: ${KUBERNETES_CERT}
    kubernetes_token: ${KUBERNETES_TOKEN}
    repo: registry.hkoerber.de/blog
    container: blog
    tag: ${DRONE_COMMIT_SHA}
    namespace: default
    when:
      branch:
        - master
    secrets:
      - KUBERNETES_SERVER
      # - KUBERNETES_CERT
      - KUBERNETES_TOKEN
